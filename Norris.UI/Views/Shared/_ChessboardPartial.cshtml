@using Microsoft.AspNetCore.Identity
@using Norris.UI.Models
@using Norris.Data.Data.Entities
@using Norris.Data.Models.DTO

@model ChessboardPartialViewModel
<link rel="stylesheet" href="~/css/chessBoard.css" />

<div class="grid-container">
    <div class="top-bottom-border-item"></div>
    @if (@Model.PlayerColor == 'w')
    {
        @for (char j = 'A'; j <= 'H'; j++)
        {
            <div class="top-bottom-border-item">@j</div>
        }
    }
    else
    {
        @for (char j = 'H'; j >= 'A'; j--)
        {
            <div class="top-bottom-border-item">@j</div>
        }
    }
    <div class="top-bottom-border-item"></div>
</div>

<div class="grid-container">
    @{string c = "white-item";
        string fileext = ".png";
    }
    @{string[,] board = @Model.GameState.Board;}
    @if (@Model.PlayerColor == 'b')
    {
        //Reverse the board
        string[,] originalBoard = board;
        string[,] reversedBoard = new string[8, 8];
        foreach (char i in Enumerable.Range(0, 8))
        {
            foreach (char j in Enumerable.Range(0, 8))
            {
                reversedBoard[i, j] = originalBoard[7 - i, 7 - j];
            }
        }
        board = reversedBoard;
    }
    @for (int i = 0; i < 8; i++)
    {
        int r;
        @if (@Model.PlayerColor == 'w')
        {
            r = 8 - i;
        }
        else
        {
            r = i + 1;
        }
        <div class="side-border-item">
            @r
        </div>
        @for (int j = 0; ; j++)
        {
            char f;
            @if (@Model.PlayerColor == 'w')
            {
                f = (char)((int)'a' + j);
            }
            else
            {
                f = (char)((int)'h' - j);
            }
            <div class="grid-item @r @f @c" id="@f@r">
                <div style="position:relative;">
                    @{ string clickedPosition = f + r.ToString();}
                    <a onclick='updateBoard("@Model.GameId", "@f@r")'>
                        <img style="position:absolute" class="piece-image piece" src="~/images/pieces/@board[i,j]@fileext" alt="@board[i, j]" />
                        <div>
                            <img class="piece-image highlight" src="~/images/pieces/ee.png" alt="empty tile" />
                        </div>
                    </a>
                </div>
            </div>

            if (j == 7) { break; }

            if (c == "white-item")
            {
                c = "black-item";
            }
            else
            {
                c = "white-item";
            }
        }
        <div class="side-border-item">
            @r
        </div>
    }
</div>

<div class="grid-container">
    <div class="top-bottom-border-item"></div>
    @if (@Model.PlayerColor == 'w')
    {
        @for (char j = 'A'; j <= 'H'; j++)
        {
            <div class="top-bottom-border-item">@j</div>
        }
    }
    else
    {
        @for (char j = 'H'; j >= 'A'; j--)
        {
            <div class="top-bottom-border-item">@j</div>
        }
    }
    <div class="top-bottom-border-item"></div>
</div>
<script src="/js/game.js"></script>



