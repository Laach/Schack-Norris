@using Norris.Data.Data.Entities
@using Norris.Data.Models.DTO
@model GameViewModel

<script src="~/js/site.js" asp-append-version="true"></script>


<div class="row" id="siteGrid">
    <div class="col-lg-1"></div>
    <div class="col-xs-12 col-sm-4 col-lg-3">@await Html.PartialAsync("_ChatPartial", Model.Chat)</div>
    <div class="col-xs-12 col-sm-8 col-lg-4">
        <div class="panel panel-default" id="panel-override">
            <div class="panel-heading" id="panel-heading-override">
                <div class="row">
                    <div class="col-lg-6 col-sm-6 col-xs-6" id="gameInfoLeft">
                        Chess game vs. @Model.OpponentName              
                    </div>
                    <div class="col-lg-6 col-sm-6 col-xs-6" id="gameInfoRight">
                        @if (@Model.Board.PlayerColor == 'w')
                        {
                            <span>You are white.<img src="~/images/pieces/wn.png" style="height:15px" alt="white knight" /></span>
                        }
                        else
                        {
                            <span>You are black.<img src="~/images/pieces/bn.png" style="height:15px" alt="black knight" /></span>
                        }
                    </div>
                </div>
            </div>
            @await Html.PartialAsync("_ChessboardPartial", Model.Board)

                @if(!@Model.Board.GameState.IsActive)
                {
                  @if(@Model.Board.PlayerColor == 'w')
                  {
                    <div class="alert alert-danger" role="alert" id="banner"><strong>You lost</strong></div>
                  }
                  else
                  {
                    <div class="alert alert-success" role="alert" id="banner"><strong>You won</strong></div>
                  }
                  
                }
                else if (@Model.Board.PlayerColor == @Model.Board.GameState.ActivePlayerColor)
                {
                    <div class="alert alert-success" role="alert" id="banner">It's <strong>your turn</strong> </div>
                }
                else
                {
                    <div class="alert alert-info" role="alert" id="banner">Waiting for your <strong>opponents move</strong></div>
                }

            <div class="panel-body" id="panel-body-override">
                <p id="gameInfoBottom">
                    Place the opponent in check mate to win. Nulla vitae elit libero, a pharetra augue.
                    Aenean lacinia bibendum nulla sed consectetur. Aenean eu leo quam.
                    Pellentesque ornare sem lacinia quam venenatis vestibulum.
                    Nullam id dolor id nibh ultricies vehicula ut id elit.
                </p>
            </div>
        </div>
    </div>
    <div class="col-xs-12 col-sm-12 col-lg-3" id="sidebar">@await Html.PartialAsync("_FriendsPartial", Model.FriendsAndGames)</div>
    <div class="col-lg-1"></div>
</div>

<script>
  const timer = setInterval(tryGetUpdates, 1000, "@Model.Board.GameId");
</script>

